name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'minor'
        type: choice
        options:
          - minor
          - patch
          - major

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup Node.js with NPM authentication
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: 'https://registry.npmjs.org'
          scope: '@contactsmanager'

      - name: Lint & Test
        run: |
          yarn lint
          yarn typecheck
          yarn test

      - name: Build package
        run: yarn prepare

      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create Release and Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Create release-it config file
          echo '{
            "git": {
              "requireBranch": "main",
              "commitMessage": "chore: release v${version}",
              "tagName": "v${version}"
            },
            "github": {
              "release": true
            },
            "npm": {
              "publish": false
            }
          }' > .release-it.json

          # Run release-it with the specified bump type
          yarn release ${{ github.event.inputs.version_bump }} --ci --no-git.requireUpstream

          # Get new version for later use
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn publish-npm

      - name: Output Result
        run: echo "Successfully published version ${{ env.NEW_VERSION }} to NPM"
